---
# variables
# =========
# aws_bucket_name: # bucket name
# aws_bucket_prefix: # base prefix for terraform state and plan files
# aws_region: # aws region
# aws_access_key_id: # access key id for plan and state file access
# aws_secret_access_key: # secret access key

resources:

# source code
# ===========
- name: concourse-terraform
  type: git
  source:
    uri: https://github.com/Snapkitchen/concourse-terraform.git

# docker image
# ============
- name: concourse-terraform-image
  type: docker-image
  source:
    repository: snapkitchen/concourse-terraform
    tag: 0.11.10

# terraform plan archives
# =======================
- name: terraform-apply-plan
  type: s3
  source:
    bucket: ((aws_bucket_name))
    regexp: ((aws_bucket_prefix))/terraform/plans/apply/terraform-(\d{10}\.[0-9A-Fa-f]{7}).tar.gz
    region_name: ((aws_region))
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    server_side_encryption: AES256

# - name: terraform-destroy-plan
#   type: s3
#   source:
#     bucket: ((aws_bucket_name))
#     regexp: ((aws_bucket_prefix))/terraform/plans/destroy/terraform-(\d{10}\.[0-9A-Fa-f]{7}).tar.gz
#     region_name: ((aws_region))
#     access_key_id: ((aws_access_key_id))
#     secret_access_key: ((aws_secret_access_key))
#     server_side_encryption: AES256

jobs:

# plan
# ====
- name: plan
  serial_groups: [terraform]
  plan:
  - get: concourse-terraform
  - get: concourse-terraform-image
  - task: create-plan
    image: concourse-terraform-image
    file: concourse-terraform/tasks/create-plan.yaml
    input_mapping:
      terraform-source-dir: concourse-terraform
    params:
      TF_WORKING_DIR: terraform-source-dir/testdata/terraform
      SOURCE_REF_FILE: terraform-source-dir/.git/short_ref
      TF_BACKEND_TYPE: s3
      TF_BACKEND_CONFIG_access_key: ((aws_access_key_id))
      TF_BACKEND_CONFIG_secret_key: ((aws_secret_access_key))
      TF_BACKEND_CONFIG_bucket: ((aws_bucket_name))
      TF_BACKEND_CONFIG_key: ((aws_bucket_prefix))/terraform/state/terraform.tfstate
      TF_BACKEND_CONFIG_region: ((aws_region))
      TF_BACKEND_CONFIG_encrypt: true
      TF_BACKEND_CONFIG_acl: bucket-owner-full-control
  - put: terraform-apply-plan
    params:
      file: plan-output-archive/terraform-*.tar.gz
      acl: bucket-owner-full-control

# approve
# =======
- name: approve
  serial_groups: [terraform]
  plan:
  - get: concourse-terraform
    passed: [plan]
  - get: concourse-terraform-image
    passed: [plan]
  - get: terraform-apply-plan
    passed: [plan]
  - task: show-plan
    image: concourse-terraform-image
    file: concourse-terraform/tasks/show-plan.yaml

# apply
# =====
- name: apply
  serial_groups: [terraform]
  plan:
  - get: concourse-terraform
    passed: [approve]
  - get: concourse-terraform-image
    passed: [approve]
  - get: terraform-apply-plan
    passed: [approve]
  - task: apply-plan
    image: concourse-terraform-image
    file: concourse-terraform/tasks/apply-plan.yaml
